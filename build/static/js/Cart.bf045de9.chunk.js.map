{"version":3,"file":"static/js/Cart.bf045de9.chunk.js","mappings":"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","sources":["components/CartItem/CartItem.styled.ts","components/CartItem/CartItem.tsx","components/CartEmpty/CartEmpty.styled.ts","components/CartEmpty/CartEmpty.tsx","pages/Cart/Cart.styled.ts","pages/Cart/Cart.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\nconst Article = styled.article`\n  display: flex;\n  width: 100%;\n  border-top: 1px solid ${({theme}) => theme.colors.gray};\n  padding-top: 30px;\n  margin-top: 30px;\n`\n\nconst ImgWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-right: 15px;\n  width: 10%;\n\n\n  img {\n    height: 80px;\n    border-radius: 20px;\n  }\n`\n\nconst InfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 40%;\n\n  h3 {\n    font-weight: bold;\n    font-size: 22px;\n    line-height: 27px;\n    letter-spacing: 0.01em;\n  }\n\n  p {\n    font-size: 18px;\n    color: #8d8d8d;\n  }\n`\n\nconst Counter = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 13%;\n\n  b {\n    font-size: 22px;\n  }\n`\n\nconst Price = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 33%;\n\n  b {\n    font-weight: bold;\n    font-size: 22px;\n    letter-spacing: 0.01em;\n  }\n`\n\nconst Remove = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  width: 4%;\n`\n\nexport {Article, ImgWrapper, InfoWrapper, Counter, Price, Remove}","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { addItem, ICartItem, removeItem, removeItems } from \"../../redux/slices/cartSlice\";\nimport { ButtonCircle } from \"../Buttons/Buttons.styled\";\nimport { Article, ImgWrapper, InfoWrapper, Counter, Price, Remove } from \"./CartItem.styled\";\n\ninterface CartItemProps {\n  id: string,\n  name: string,\n  price: number,\n  size: number,\n  type: string,\n  count: number,\n  imageUrl: string\n}\n\nconst CartItem: React.FC<CartItemProps> = ({ id, name, price, size, type, count, imageUrl}) => {\n  const dispatch = useDispatch();\n\n  const onClickAdd = () => {\n    const item: ICartItem = {\n      id,\n      name,\n      price,\n      imageUrl,\n      size,\n      type,\n      count,\n    };\n    dispatch(addItem(item));\n  }\n\n  const onClickRemove = () => {\n    const item = {\n      id, price, count\n    };\n    dispatch(removeItem(item));\n  }\n\n  const onClickDelete = () => {\n    const item = {\n      id, price, count\n    };\n    dispatch(removeItems(item))\n  }\n\n  return (\n    <Article>\n      <ImgWrapper>\n        <img src={imageUrl} alt=\"Pizza\" />\n      </ImgWrapper>\n      <InfoWrapper>\n        <h3>{name}</h3>\n        <p>{type} dough, {size} inch</p>\n      </InfoWrapper>\n      <Counter>\n        <ButtonCircle\n          disabled={count === 1}\n          onClick={onClickRemove}\n          minus\n        >\n          <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\" fill=\"#EB5A1E\"></path>\n          <path d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\" fill=\"#EB5A1E\"></path>\n          </svg>\n        </ButtonCircle>\n        <b>{count}</b>\n        <ButtonCircle\n          onClick={onClickAdd}\n        >\n          <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\" fill=\"#EB5A1E\"></path>\n          <path d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\" fill=\"#EB5A1E\"></path>\n          </svg>\n        </ButtonCircle>\n      </Counter>\n      <Price>\n        <b>{price * count}$</b>\n      </Price>\n      <Remove>\n        <ButtonCircle\n          onClick={onClickDelete}\n          remove\n        >\n          <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\" fill=\"#EB5A1E\"></path>\n            <path d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\" fill=\"#EB5A1E\"></path>\n            </svg>\n\n          </ButtonCircle>\n      </Remove>\n    </Article>\n  )\n}\nexport default CartItem","import styled from \"styled-components\";\n\nexport const Article = styled.article`\n  margin: 80px auto;\n  max-width: 600px;\n  text-align: center;\n\n  h2 {\n    font-size: 36px;\n    font-weight: 700;\n    margin-bottom: 25px;\n\n    @media screen and (max-width: 500px) {\n      font-size: 30px;\n    }\n  }\n\n  p {\n    font-size: 20px;\n    line-height: 145.4%;\n    letter-spacing: 0.01em;\n    color: #777777;\n\n    @media screen and (max-width: 500px) {\n      font-size: 15px;\n    }\n  }\n\n  img {\n    display: block;\n    width: 300px;\n    margin: 45px auto 60px;\n\n    @media screen and (max-width: 500px) {\n      width: 200px;\n    }\n  }\n`","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport cartImg from \"../../assets/img/empty-cart.png\"\nimport { ButtonBlack } from \"../Buttons/Buttons.styled\";\nimport { Article } from \"./CartEmpty.styled\";\n\nconst CartEmpty: React.FC = () => {\n  return (\n    <Article>\n      <h2>Your cart is empty <span>ðŸ˜•</span></h2>\n      <p>\n        You haven't ordered food yet.<br />\n        If you want to make an order go back to the main page.\n      </p>\n      <img src={cartImg} alt=\"empty cart\" />\n      <ButtonBlack to=\"/\" as={Link}>\n        <span>Go Back</span>\n      </ButtonBlack>\n    </Article>\n  )\n}\nexport default CartEmpty;","import styled from \"styled-components\";\n\nconst Top = styled.section`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nconst Title = styled.h2`\n  display: flex;\n  align-items: center;\n  font-size: 32px;\n\n  svg {\n    position: relative;\n    top: -2px;\n    width: 30px;\n    height: 30px;\n    margin-right: 10px;\n\n    path {\n      stroke: ${({theme}) => theme.colors.third};\n      stroke-width: 1.9;\n    }\n  }\n`\n\nconst Clear = styled.div`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n\n  span {\n    display: inline-block;\n    margin-left: 7px;\n    color: #b6b6b6;\n    font-size: 18px;\n  }\n\n  span,\n  svg,\n  path {\n    transition: all ${({theme}) => theme.duration} ease-in-out;\n  }\n\n  &:hover {\n    svg {\n      path {\n        stroke: #373737;\n      }\n    }\n    span {\n      color: #373737;\n    }\n  }\n`\n\nconst Bottom = styled.section`\n  margin: 50px 0;\n`\n\nconst Details = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  span {\n    font-size: 22px;\n\n    &:last-of-type {\n      b {\n        color: ${({theme}) => theme.colors.primary};\n      }\n    }\n  }\n`\n\nconst Buttons = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 40px;\n`\n\nexport {Top, Title, Clear, Bottom, Details, Buttons}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { clearItems, selectCart } from \"../../redux/slices/cartSlice\";\nimport CartItem from \"../../components/CartItem/CartItem\";\nimport CartEmpty from \"../../components/CartEmpty/CartEmpty\";\nimport { ButtonBack, ButtonPay } from \"../../components/Buttons/Buttons.styled\";\nimport { Top, Title, Clear, Bottom, Details, Buttons } from \"./Cart.styled\";\n\ninterface Item {\n  id: string,\n  name: string,\n  price: number,\n  size: number,\n  type: string,\n  count: number,\n  imageUrl: string\n}\n\nconst Cart: React.FC = () => {\n  const {itemsCount, totalPrice, items} = useSelector(selectCart);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      {items.length ? (\n      <>\n        <Top>\n          <Title>\n            <svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z\" stroke=\"white\" strokeWidth=\"1.8\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\n            <path d=\"M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z\" stroke=\"white\" strokeWidth=\"1.8\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\n            <path d=\"M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669\" stroke=\"white\" strokeWidth=\"1.8\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\n            </svg>\n            Cart\n          </Title>\n          <Clear>\n            <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M2.5 5H4.16667H17.5\" stroke=\"#B6B6B6\" strokeWidth=\"1.2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\n            <path d=\"M6.66663 5.00001V3.33334C6.66663 2.89131 6.84222 2.46739 7.15478 2.15483C7.46734 1.84227 7.89127 1.66667 8.33329 1.66667H11.6666C12.1087 1.66667 12.5326 1.84227 12.8451 2.15483C13.1577 2.46739 13.3333 2.89131 13.3333 3.33334V5.00001M15.8333 5.00001V16.6667C15.8333 17.1087 15.6577 17.5326 15.3451 17.8452C15.0326 18.1577 14.6087 18.3333 14.1666 18.3333H5.83329C5.39127 18.3333 4.96734 18.1577 4.65478 17.8452C4.34222 17.5326 4.16663 17.1087 4.16663 16.6667V5.00001H15.8333Z\" stroke=\"#B6B6B6\" strokeWidth=\"1.2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\n            <path d=\"M8.33337 9.16667V14.1667\" stroke=\"#B6B6B6\" strokeWidth=\"1.2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\n            <path d=\"M11.6666 9.16667V14.1667\" stroke=\"#B6B6B6\" strokeWidth=\"1.2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\n            </svg>\n            <span onClick={() => dispatch(clearItems())}>Delete all items</span>\n          </Clear>\n        </Top>\n\n        <section>\n          {items.map((item: Item) => (\n            <CartItem key={item.id} {...item} />\n          ))}\n        </section>\n\n        <Bottom>\n          <Details>\n            <span> Items <b>{itemsCount}</b> </span>\n            <span> Subtotal <b>{totalPrice} $</b> </span>\n          </Details>\n          <Buttons>\n            <ButtonBack to=\"/\" as={Link}>\n              <svg width=\"8\" height=\"14\" viewBox=\"0 0 8 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M7 13L1 6.93015L6.86175 1\" stroke=\"#D3D3D3\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\n              </svg>\n              <span>Go Back</span>\n            </ButtonBack>\n            <ButtonPay>\n              <span>Buy now</span>\n            </ButtonPay>\n          </Buttons>\n        </Bottom>\n      </>\n    ) : (\n      <CartEmpty />\n    )}\n    </>\n  )\n}\nexport default Cart"],"names":["Article","styled","theme","colors","gray","ImgWrapper","InfoWrapper","Counter","Price","Remove","id","name","price","size","type","count","imageUrl","dispatch","useDispatch","src","alt","disabled","onClick","item","removeItem","minus","width","height","viewBox","fill","xmlns","d","addItem","removeItems","remove","cartImg","to","as","Link","Top","Title","third","Clear","duration","Bottom","Details","primary","Buttons","useSelector","selectCart","itemsCount","totalPrice","items","length","stroke","strokeWidth","strokeLinecap","strokeLinejoin","clearItems","map"],"sourceRoot":""}